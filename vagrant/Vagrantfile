# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # Every Vagrant development environment requires a box. You can search for
  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "bento/ubuntu-24.04"
  # Configuración de red (accesible via IP)
  config.vm.network "private_network", ip: "192.168.33.10"

  # Configurar carpetas compartidas
  config.vm.synced_folder ".", "/vagrant", type: "virtualbox"
  config.vm.synced_folder "./scripts", "/home/vagrant/scripts", create: true, type: "virtualbox"

  # Configuración de VirtualBox
  config.vm.provider "virtualbox" do |vb|
    vb.memory = "2048"
    vb.cpus = 2
    vb.name = "devops-bootcamp-vm"
  end

  # Provisionamiento mejorado
  config.vm.provision "shell", inline: <<-SHELL
    # Actualizar sistema
    apt update && apt upgrade -y
    
    # Instalar utilidades básicas
    apt install -y curl wget git vim tree htop net-tools software-properties-common apt-transport-https ca-certificates gnupg lsb-release
    
    # Instalar Docker (método oficial)
    curl -fsSL https://download.docker.com/linux/ubuntu/gpg | gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" | tee /etc/apt/sources.list.d/docker.list > /dev/null
    apt update
    apt install -y docker-ce docker-ce-cli containerd.io docker-compose-plugin
    
    # Configurar Docker
    systemctl enable --now docker
    usermod -aG docker vagrant
    
    # Instalar kubectl (método oficial)
    curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    rm kubectl
    
    # Instalar Minikube
    curl -LO https://storage.googleapis.com/minikube/releases/latest/minikube-linux-amd64
    install minikube-linux-amd64 /usr/local/bin/minikube
    rm minikube-linux-amd64
    
    # Instalar Helm
    curl https://baltocdn.com/helm/signing.asc | gpg --dearmor | tee /usr/share/keyrings/helm.gpg > /dev/null
    echo "deb [arch=amd64 signed-by=/usr/share/keyrings/helm.gpg] https://baltocdn.com/helm/stable/debian/ all main" | tee /etc/apt/sources.list.d/helm-stable-debian.list
    apt update
    apt install -y helm
    
    # Instalar Terraform
    wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
    echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | tee /etc/apt/sources.list.d/hashicorp.list
    apt update && apt install -y terraform
    
    # Instalar Go
    wget https://go.dev/dl/go1.21.5.linux-amd64.tar.gz
    tar -C /usr/local -xzf go1.21.5.linux-amd64.tar.gz
    rm go1.21.5.linux-amd64.tar.gz
    
    # Configurar PATH para Go
    echo 'export PATH=$PATH:/usr/local/go/bin' >> /home/vagrant/.bashrc
    echo 'export PATH=$PATH:/home/vagrant/go/bin' >> /home/vagrant/.bashrc
    
    # Instalar Python y pip
    apt install -y python3 python3-pip python3-venv
    
    # Instalar Ansible
    python3 -m pip install ansible
    
    # Crear estructura de directorios
    mkdir -p /home/vagrant/{projects,scripts,configs}
    chown -R vagrant:vagrant /home/vagrant/{projects,scripts,configs}
    
    # Verificar instalaciones
    echo "=== Verificación de instalaciones ==="
    docker --version
    kubectl version --client
    minikube version
    helm version
    terraform version
    go version
    python3 --version
    ansible --version
    
    echo "=== Setup completado ==="
    echo "Reinicia la sesión para aplicar cambios de grupos: vagrant reload"
  SHELL
end